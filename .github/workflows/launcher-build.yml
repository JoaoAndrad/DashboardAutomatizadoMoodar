name: Build launcher and publish release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Prepare dist directory
        run: mkdir -p dist/${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          echo "🏗️ Building for $GOOS/$GOARCH"
          pushd launcher

          echo "Ensuring Go modules are ready..."
          go mod tidy
          go mod download

          if [ "$GOOS" = "windows" ]; then
            TARGET_NAME="moodar-launcher.exe"
          else
            TARGET_NAME="moodar-launcher"
          fi

          echo "Compiling binary: $TARGET_NAME"
          GOOS=$GOOS GOARCH=$GOARCH go build -ldflags "-s -w" -o ../dist/${GOOS}-${GOARCH}/${TARGET_NAME} .
          popd

      - name: Package artifact
        run: |
          pushd dist/${{ matrix.goos }}-${{ matrix.goarch }}

          # Copy icon if available
          ICON_SRC="../../launcher/icon.ico"
          if [ -f "$ICON_SRC" ]; then
            cp "$ICON_SRC" . || true
          fi

          if [ "${{ matrix.goos }}" = "windows" ]; then
            BIN_NAME="moodar-launcher.exe"
          else
            BIN_NAME="moodar-launcher"
          fi

          ZIP_NAME="moodar-launcher-${{ matrix.goos }}-${{ matrix.goarch }}.zip"

          if [ -f icon.ico ]; then
            zip -r "$ZIP_NAME" "$BIN_NAME" icon.ico || zip -r "$ZIP_NAME" "$BIN_NAME"
          else
            zip -r "$ZIP_NAME" "$BIN_NAME"
          fi

          sha256sum "$ZIP_NAME" > "${ZIP_NAME}.sha256"
          popd

      - name: Upload artifact (per platform)
        uses: actions/upload-artifact@v4
        with:
          name: moodar-launcher-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/${{ matrix.goos }}-${{ matrix.goarch }}/*.zip*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Debug artifacts
        run: |
          echo "📂 Listing artifacts for debug:"
          ls -la artifacts || true
          find artifacts -maxdepth 3 -type f -print || true

      - name: Create project zip
        env:
          TAG: ${{ github.ref_name }}
        run: |
          PROJECT_ZIP="project-${TAG}.zip"
          echo "📦 Creating $PROJECT_ZIP"
          zip -r "$PROJECT_ZIP" . \
            -x ".git/**" \
            -x ".venv/**" \
            -x "venv/**" \
            -x "tmp*" \
            -x "companies_cache_*.json" \
            -x "**/__pycache__/**" \
            -x "**/*.pyc"
          sha256sum "$PROJECT_ZIP" > "${PROJECT_ZIP}.sha256"

      - name: Publish release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.zip.sha256
            project-${{ github.ref_name }}.zip
            project-${{ github.ref_name }}.zip.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
